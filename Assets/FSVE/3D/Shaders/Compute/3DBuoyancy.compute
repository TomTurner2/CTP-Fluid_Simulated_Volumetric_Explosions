#include "FSVEUtility.cginc"


RWStructuredBuffer<float3> write_RGB;
StructuredBuffer<float3> velocity;
StructuredBuffer<float> density;
StructuredBuffer<float> temperature;

float dt;
float4 up;
float4 size;
float ambient_temperature;
float buoyancy;
float weight;


#pragma kernel ApplyBuoyancy
[numthreads(8,8,8)]
void ApplyBuoyancy (uint3 id : SV_DispatchThreadID)
{
	int index = GetIndex(id, size);

	float cell_temperature = temperature[index];
	float cell_density = density[index];
	float3 cell_velocity = velocity[index];

	if (cell_temperature > ambient_temperature)// Rise if hotter than normal temperature
	{
		cell_velocity += (dt * (cell_temperature - ambient_temperature) *
		buoyancy - cell_density * weight) * up.xyz;// Buoyancy factors in density weight and temperature
	}

	write_RGB[index] = cell_velocity;// Write the new velocity
}


#pragma kernel ApplyBuoyancySimple
[numthreads(8,8,8)]
void ApplyBuoyancySimple(uint3 id : SV_DispatchThreadID)
{
	int index = GetIndex(id, size);
	float cell_temperature = temperature[index];
	float3 cell_velocity = velocity[index];

	if (cell_temperature > ambient_temperature)// Rise if hotter than normal temperature
	{
		cell_velocity += (dt * (cell_temperature - ambient_temperature) *
		buoyancy) * up.xyz;// Simple buoyancy dosen't factor in weight, for sims that don't use density
	}

	write_RGB[index] = cell_velocity;
}
